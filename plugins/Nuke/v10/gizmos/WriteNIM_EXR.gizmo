#! C:/Program Files/Nuke10.0v1/nuke-10.0.1.dll -nx
#write_info WriteEXR file:"[ value nimPath ]/[value nimFolder]/[value nimFilename]" format:"2048 1556 1" chans:":" framerange:"1 100" fps:"0" colorspace:"default (linear)" datatype:"16 bit half" transfer:"unknown" views:"main" colorManagement:"Nuke"
version 10.0 v1
Gizmo {
 addUserKnob {20 User l WriteNIM_EXR}
 addUserKnob {26 nim_outputFileText l Filename T "expected integer but got \"\""}
 addUserKnob {41 nimCompTag l "Render Tag" T WriteEXR.nimCompTag}
 addUserKnob {41 nimFilename l INVISIBLE +INVISIBLE T WriteEXR.nimFilename}
 addUserKnob {22 refreshFilename l "Refresh Filename" t "This is a check to visualize the output filename.  The output filename will always be correct.  This button just refreshed the display label incase the file was versioned up or the tag changed while the preference pane was open." T "nuke.thisNode()\['nim_outputFileText'].setValue(nuke.thisNode()\['nimFilename'].value())" +STARTLINE}
 addUserKnob {52 pythonFilenameScript T "nuke.thisNode()\['nim_outputFileText'].setValue(nuke.thisNode()\['nimFilename'].value())" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 channels T WriteEXR.channels}
 addUserKnob {41 frame_mode l frame T WriteEXR.frame_mode}
 addUserKnob {41 frame l "" -STARTLINE T WriteEXR.frame}
 addUserKnob {41 colorspace T WriteEXR.colorspace}
 addUserKnob {41 premultiplied -STARTLINE T WriteEXR.premultiplied}
 addUserKnob {41 raw l "raw data" -STARTLINE T WriteEXR.raw}
 addUserKnob {41 views T WriteEXR.views}
 addUserKnob {26 "" l "exr Options"}
 addUserKnob {41 autocrop T WriteEXR.autocrop}
 addUserKnob {41 datatype T WriteEXR.datatype}
 addUserKnob {41 compression T WriteEXR.compression}
 addUserKnob {41 dw_compression_level l INVISIBLE +INVISIBLE T WriteEXR.dw_compression_level}
 addUserKnob {41 heroview T WriteEXR.heroview}
 addUserKnob {41 metadata T WriteEXR.metadata}
 addUserKnob {41 noprefix l "do not attach prefix" -STARTLINE T WriteEXR.noprefix}
 addUserKnob {41 interleave T WriteEXR.interleave}
 addUserKnob {41 "standard layer name format" T "WriteEXR.standard layer name format"}
 addUserKnob {41 write_full_layer_names l "write full layer names" T WriteEXR.write_full_layer_names}
 addUserKnob {41 truncateChannelNames l "truncate channel names" T WriteEXR.truncateChannelNames}
 addUserKnob {26 ""}
 addUserKnob {41 render_order l "render order" T WriteEXR.render_order}
 addUserKnob {41 Render -STARTLINE T WriteEXR.Render}
 addUserKnob {41 first l "frame range" T WriteEXR.first}
 addUserKnob {41 last l "" -STARTLINE T WriteEXR.last}
 addUserKnob {41 use_limit l "limit to range" -STARTLINE T WriteEXR.use_limit}
 addUserKnob {26 "" l " "}
 addUserKnob {41 reading l "read file" T WriteEXR.reading}
 addUserKnob {41 checkHashOnRead l "check file matches input" -STARTLINE T WriteEXR.checkHashOnRead}
 addUserKnob {41 on_error l "missing frames" T WriteEXR.on_error}
 addUserKnob {41 reload l Reload -STARTLINE T WriteEXR.reload}
 addUserKnob {41 read_all_lines l "read all lines" -STARTLINE T WriteEXR.read_all_lines}
 addUserKnob {20 "" l OCIO}
 addUserKnob {26 "" l Context}
 addUserKnob {41 key1 T WriteEXR.key1}
 addUserKnob {41 value1 -STARTLINE T WriteEXR.value1}
 addUserKnob {41 key2 T WriteEXR.key2}
 addUserKnob {41 value2 -STARTLINE T WriteEXR.value2}
 addUserKnob {41 key3 T WriteEXR.key3}
 addUserKnob {41 value3 -STARTLINE T WriteEXR.value3}
 addUserKnob {41 key4 T WriteEXR.key4}
 addUserKnob {41 value4 -STARTLINE T WriteEXR.value4}
 addUserKnob {41 in_colorspace l INVISIBLE +INVISIBLE T WriteEXR.in_colorspace}
 addUserKnob {41 out_colorspace l INVISIBLE +INVISIBLE T WriteEXR.out_colorspace}
 addUserKnob {41 reverse_transform l INVISIBLE +INVISIBLE T WriteEXR.reverse_transform}
 addUserKnob {20 "" l Python}
 addUserKnob {41 beforeRender l "before render" T WriteEXR.beforeRender}
 addUserKnob {41 beforeFrameRender l "before each frame" T WriteEXR.beforeFrameRender}
 addUserKnob {41 afterFrameRender l "after each frame" T WriteEXR.afterFrameRender}
 addUserKnob {41 afterRender l "after render" T WriteEXR.afterRender}
 addUserKnob {41 renderProgress l "render progress" T WriteEXR.renderProgress}
}
 Input {
  inputs 0
  name Input1
  xpos 436
  ypos -146
 }
 Write {
  file "\[ value nimPath ]/\[value nimFolder]/\[value nimFilename]"
  file_type exr
  beforeRender "import nim_tools; nim_tools.CheckOutputPath()"
  name WriteEXR
  xpos 436
  ypos -106
  addUserKnob {20 User}
  addUserKnob {1 nimCompTag l "Render Tag"}
  addUserKnob {1 nimPath l "NIM Path"}
  nimPath "\[ value root.nim_compPath ]"
  addUserKnob {1 nimFolder l "NIM Folder"}
  nimFolder "\[value root.nim_basename]_v\[format %02d \[value root.nim_version]]\[ if \{ !\[string equal \[string trim \[value nimCompTag] \" \"] \"\"] \} \{return _\[string trim \[value nimCompTag] \" \"]\} ]"
  addUserKnob {1 nimFilename l "NIM Filename"}
  nimFilename "\[value root.nim_basename]_v\[format %02d \[value root.nim_version]]\[ if \{ !\[string equal \[string trim \[value nimCompTag] \" \"] \"\"] \} \{return _\[string trim \[value nimCompTag] \" \"]\} ].%04d.\[value file_type]"
 }
 Output {
  name Output1
  xpos 436
  ypos -6
 }
end_group
