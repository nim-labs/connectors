#! C:/Program Files/Nuke8.0v5/nuke-8.0.v5.dll -nx
version 8.0 v5
Gizmo {
 addUserKnob {20 User l "WriteNIM TIF"}
 addUserKnob {26 outputFileText l Filename -STARTLINE T "NIM filename"}
 addUserKnob {41 nimCompTag l "Render Tag" T WriteNIM_TIF.nimCompTag}
 addUserKnob {41 nimFilename l INVISIBLE +INVISIBLE T WriteNIM_TIF.nimFilename}
 addUserKnob {22 refreshFilename l "Refresh Filename" t "This is just a check to visualize the output filename.  The output filename will always be correct.  This button just refreshed the display label incase the file was versioned up or the tag changed while the preference pane was open." T "nuke.thisNode()\['outputFileText'].setValue(nuke.thisNode()\['nimFilename'].value()+'.####.tif')" +STARTLINE}
 addUserKnob {52 pythonFilenameScript T "nuke.thisNode()\['outputFileText'].setValue(nuke.thisNode()\['nimFilename'].value()+'.####.tif')" +STARTLINE}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {41 channels T WriteNIM_TIF.channels}
 addUserKnob {41 frame_mode l frame T WriteNIM_TIF.frame_mode}
 addUserKnob {41 frame l "" -STARTLINE T WriteNIM_TIF.frame}
 addUserKnob {41 colorspace T WriteNIM_TIF.colorspace}
 addUserKnob {41 premultiplied T WriteNIM_TIF.premultiplied}
 addUserKnob {41 raw l "raw data" T WriteNIM_TIF.raw}
 addUserKnob {41 views T WriteNIM_TIF.views}
 addUserKnob {26 "" l "tiff Options"}
 addUserKnob {41 datatype l "data type" T WriteNIM_TIF.datatype}
 addUserKnob {41 compression T WriteNIM_TIF.compression}
 addUserKnob {26 ""}
 addUserKnob {41 render_order l "render order" T WriteNIM_TIF.render_order}
 addUserKnob {41 Render T WriteNIM_TIF.Render}
 addUserKnob {41 first l "frame range" T WriteNIM_TIF.first}
 addUserKnob {41 last l "" -STARTLINE T WriteNIM_TIF.last}
 addUserKnob {41 use_limit l "limit to range" T WriteNIM_TIF.use_limit}
 addUserKnob {26 "" l " "}
 addUserKnob {41 reading l "read file" T WriteNIM_TIF.reading}
 addUserKnob {41 checkHashOnRead l "check file matches input" T WriteNIM_TIF.checkHashOnRead}
 addUserKnob {41 on_error l "missing frames" T WriteNIM_TIF.on_error}
 addUserKnob {41 reload l Reload T WriteNIM_TIF.reload}
 addUserKnob {20 "" l Python}
 addUserKnob {41 beforeRender l "before render" T WriteNIM_TIF.beforeRender}
 addUserKnob {41 beforeFrameRender l "before each frame" T WriteNIM_TIF.beforeFrameRender}
 addUserKnob {41 afterFrameRender l "after each frame" T WriteNIM_TIF.afterFrameRender}
 addUserKnob {41 afterRender l "after render" T WriteNIM_TIF.afterRender}
 addUserKnob {41 renderProgress l "render progress" T WriteNIM_TIF.renderProgress}
 addUserKnob {41 disable_1 l INVISIBLE +INVISIBLE T WriteNIM_PNG.disable}
}
 Input {
  inputs 0
  name Input1
  xpos 282
  ypos 160
 }
 Write {
  file "\[ value nimPath ]/\[value nimFolder]/\[value nimFilename].####.tif"
  file_type tiff
  checkHashOnRead false
  version 1
  beforeRender "import nim_tools; nim_tools.CheckOutputPath();"
  name WriteNIM_TIF
  xpos 282
  ypos 200
  disable {{parent.disable}}
  addUserKnob {20 User}
  addUserKnob {1 nimCompTag l "Render Tag" t "A tag to append to the current filename"}
  addUserKnob {1 nimPath l "NIM Path"}
  nimPath "\[ value root.nim_compPath ]"
  addUserKnob {1 nimFolder l "NIM Folder"}
  nimFolder "\[value root.nim_basename]_v\[format %02d \[value root.nim_version]]\[ if \{ !\[string equal \[string trim \[value nimCompTag] \" \"] \"\"] \} \{return _\[string trim \[value nimCompTag] \" \"]\} ]"
  addUserKnob {1 nimFilename l "NIM Filename"}
  nimFilename "\[value root.nim_basename]_v\[format %02d \[value root.nim_version]]\[ if \{ !\[string equal \[string trim \[value nimCompTag] \" \"] \"\"] \} \{return _\[string trim \[value nimCompTag] \" \"]\} ]"
 }
 Output {
  name Output1
  xpos 282
  ypos 300
 }
end_group
