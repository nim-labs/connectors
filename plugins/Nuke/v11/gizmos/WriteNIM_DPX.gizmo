#! C:/Program Files/Nuke10.0v4/nuke-10.0.4.dll -nx
#write_info Nuke10_WriteDPX file:"[ value nimPath ]/[value nimFolder]/[value nimFilename]" format:"2048 1556 1" chans:":" framerange:"1 100" fps:"0" colorspace:"default (Cineon)" datatype:"10 bit" transfer:"(auto detect)" views:"main" colorManagement:"Nuke"
version 10.0 v4
Gizmo {
 addUserKnob {20 User l WriteNIM_DPX}
 addUserKnob {26 nim_outputFileText l Filename T "expected integer but got \"\""}
 addUserKnob {41 nimCompPrefix l "Render Prefix" T Nuke10_WriteDPX.nimCompPrefix}
 addUserKnob {41 nimCompTag l "Render Tag" T Nuke10_WriteDPX.nimCompTag}
 addUserKnob {41 nimFilename l INVISIBLE +INVISIBLE T Nuke10_WriteDPX.nimFilename}
 addUserKnob {22 refreshFilename l "Refresh Filename" t "This is a check to visualize the output filename.  The output filename will always be correct.  This button just refreshed the display label incase the file was versioned up or the tag changed while the preference pane was open." T "nuke.thisNode()\['nim_outputFileText'].setValue(nuke.thisNode()\['nimFilename'].value())" +STARTLINE}
 addUserKnob {52 pythonFilenameScript T "nuke.thisNode()\['nim_outputFileText'].setValue(nuke.thisNode()\['nimFilename'].value())" +STARTLINE}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {41 channels T Nuke10_WriteDPX.channels}
 addUserKnob {41 frame_mode l frame T Nuke10_WriteDPX.frame_mode}
 addUserKnob {41 frame l "" -STARTLINE T Nuke10_WriteDPX.frame}
 addUserKnob {41 colorspace T Nuke10_WriteDPX.colorspace}
 addUserKnob {41 premultiplied -STARTLINE T Nuke10_WriteDPX.premultiplied}
 addUserKnob {41 raw l "raw data" -STARTLINE T Nuke10_WriteDPX.raw}
 addUserKnob {41 views T Nuke10_WriteDPX.views}
 addUserKnob {26 "" l "dpx Options"}
 addUserKnob {41 datatype T Nuke10_WriteDPX.datatype}
 addUserKnob {41 fill -STARTLINE T Nuke10_WriteDPX.fill}
 addUserKnob {41 bigEndian l "big endian" -STARTLINE T Nuke10_WriteDPX.bigEndian}
 addUserKnob {41 transfer T Nuke10_WriteDPX.transfer}
 addUserKnob {26 ""}
 addUserKnob {41 render_order l "render order" T Nuke10_WriteDPX.render_order}
 addUserKnob {41 Render -STARTLINE T Nuke10_WriteDPX.Render}
 addUserKnob {41 first l "frame range" T Nuke10_WriteDPX.first}
 addUserKnob {41 last l "" -STARTLINE T Nuke10_WriteDPX.last}
 addUserKnob {41 use_limit l "limit to range" T Nuke10_WriteDPX.use_limit}
 addUserKnob {26 "" l " "}
 addUserKnob {41 reading l "read file" T Nuke10_WriteDPX.reading}
 addUserKnob {41 checkHashOnRead l "check file matches input" -STARTLINE T Nuke10_WriteDPX.checkHashOnRead}
 addUserKnob {41 on_error l "missing frames" T Nuke10_WriteDPX.on_error}
 addUserKnob {41 reload l Reload -STARTLINE T Nuke10_WriteDPX.reload}
 addUserKnob {41 read_all_lines l "read all lines" -STARTLINE T Nuke10_WriteDPX.read_all_lines}
 addUserKnob {20 "" l OCIO}
 addUserKnob {26 "" l Context}
 addUserKnob {41 key1 T Nuke10_WriteDPX.key1}
 addUserKnob {41 value1 -STARTLINE T Nuke10_WriteDPX.value1}
 addUserKnob {41 key2 T Nuke10_WriteDPX.key2}
 addUserKnob {41 value2 -STARTLINE T Nuke10_WriteDPX.value2}
 addUserKnob {41 key3 T Nuke10_WriteDPX.key3}
 addUserKnob {41 value3 -STARTLINE T Nuke10_WriteDPX.value3}
 addUserKnob {41 key4 T Nuke10_WriteDPX.key4}
 addUserKnob {41 value4 -STARTLINE T Nuke10_WriteDPX.value4}
 addUserKnob {20 "" l Python}
 addUserKnob {41 beforeRender l "before render" T Nuke10_WriteDPX.beforeRender}
 addUserKnob {41 beforeFrameRender l "before each frame" T Nuke10_WriteDPX.beforeFrameRender}
 addUserKnob {41 afterFrameRender l "after each frame" T Nuke10_WriteDPX.afterFrameRender}
 addUserKnob {41 afterRender l "after render" T Nuke10_WriteDPX.afterRender}
 addUserKnob {41 renderProgress l "render progress" T Nuke10_WriteDPX.renderProgress}
}
 Input {
  inputs 0
  name Input1
  xpos 385
  ypos -122
 }
 Write {
  file "\[ value nimPath ]/\[value nimFolder]/\[value nimFilename]"
  file_type dpx
  checkHashOnRead false
  beforeRender "import nim_tools; nim_tools.CheckOutputPath()"
  name Nuke10_WriteDPX
  xpos 385
  ypos -82
  addUserKnob {20 User}
  addUserKnob {1 nimCompPrefix l "Render Prefix" t "Enter a prefix to use for the comp name."}
  addUserKnob {1 nimCompTag l "Render Tag"}
  addUserKnob {1 nimPath l "NIM Path"}
  nimPath "\[ value root.nim_compPath ]"
  addUserKnob {1 nimFolder l "NIM Folder"}
  nimFolder "\[ if \{ !\[string equal \[string trim \[value nimCompPrefix] \" \"] \"\"] \} \{return \[string trim \[value nimCompPrefix]_ \" \"]\} ]\[value root.nim_basename]_v\[format %02d \[value root.nim_version]]\[ if \{ !\[string equal \[string trim \[value nimCompTag] \" \"] \"\"] \} \{return _\[string trim \[value nimCompTag] \" \"]\} ]"
  addUserKnob {1 nimFilename l "NIM Filename"}
  nimFilename "\[ if \{ !\[string equal \[string trim \[value nimCompPrefix] \" \"] \"\"] \} \{return \[string trim \[value nimCompPrefix]_ \" \"]\} ]\[value root.nim_basename]_v\[format %02d \[value root.nim_version]]\[ if \{ !\[string equal \[string trim \[value nimCompTag] \" \"] \"\"] \} \{return _\[string trim \[value nimCompTag] \" \"]\} ].%04d.\[value file_type]"
 }
 Output {
  name Output1
  xpos 385
  ypos 18
 }
end_group
